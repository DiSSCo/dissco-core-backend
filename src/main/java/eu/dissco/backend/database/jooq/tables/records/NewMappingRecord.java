/*
 * This file is generated by jOOQ.
 */
package eu.dissco.backend.database.jooq.tables.records;


import eu.dissco.backend.database.jooq.tables.NewMapping;

import java.time.Instant;

import org.jooq.Field;
import org.jooq.JSONB;
import org.jooq.Record2;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class NewMappingRecord extends UpdatableRecordImpl<NewMappingRecord> implements Record8<String, Integer, String, String, JSONB, Instant, String, Instant> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.new_mapping.id</code>.
     */
    public void setId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.new_mapping.id</code>.
     */
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.new_mapping.version</code>.
     */
    public void setVersion(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.new_mapping.version</code>.
     */
    public Integer getVersion() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.new_mapping.name</code>.
     */
    public void setName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.new_mapping.name</code>.
     */
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.new_mapping.description</code>.
     */
    public void setDescription(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.new_mapping.description</code>.
     */
    public String getDescription() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.new_mapping.mapping</code>.
     */
    public void setMapping(JSONB value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.new_mapping.mapping</code>.
     */
    public JSONB getMapping() {
        return (JSONB) get(4);
    }

    /**
     * Setter for <code>public.new_mapping.created</code>.
     */
    public void setCreated(Instant value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.new_mapping.created</code>.
     */
    public Instant getCreated() {
        return (Instant) get(5);
    }

    /**
     * Setter for <code>public.new_mapping.creator</code>.
     */
    public void setCreator(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.new_mapping.creator</code>.
     */
    public String getCreator() {
        return (String) get(6);
    }

    /**
     * Setter for <code>public.new_mapping.deleted</code>.
     */
    public void setDeleted(Instant value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.new_mapping.deleted</code>.
     */
    public Instant getDeleted() {
        return (Instant) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<String, Integer> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<String, Integer, String, String, JSONB, Instant, String, Instant> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<String, Integer, String, String, JSONB, Instant, String, Instant> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return NewMapping.NEW_MAPPING.ID;
    }

    @Override
    public Field<Integer> field2() {
        return NewMapping.NEW_MAPPING.VERSION;
    }

    @Override
    public Field<String> field3() {
        return NewMapping.NEW_MAPPING.NAME;
    }

    @Override
    public Field<String> field4() {
        return NewMapping.NEW_MAPPING.DESCRIPTION;
    }

    @Override
    public Field<JSONB> field5() {
        return NewMapping.NEW_MAPPING.MAPPING;
    }

    @Override
    public Field<Instant> field6() {
        return NewMapping.NEW_MAPPING.CREATED;
    }

    @Override
    public Field<String> field7() {
        return NewMapping.NEW_MAPPING.CREATOR;
    }

    @Override
    public Field<Instant> field8() {
        return NewMapping.NEW_MAPPING.DELETED;
    }

    @Override
    public String component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getVersion();
    }

    @Override
    public String component3() {
        return getName();
    }

    @Override
    public String component4() {
        return getDescription();
    }

    @Override
    public JSONB component5() {
        return getMapping();
    }

    @Override
    public Instant component6() {
        return getCreated();
    }

    @Override
    public String component7() {
        return getCreator();
    }

    @Override
    public Instant component8() {
        return getDeleted();
    }

    @Override
    public String value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getVersion();
    }

    @Override
    public String value3() {
        return getName();
    }

    @Override
    public String value4() {
        return getDescription();
    }

    @Override
    public JSONB value5() {
        return getMapping();
    }

    @Override
    public Instant value6() {
        return getCreated();
    }

    @Override
    public String value7() {
        return getCreator();
    }

    @Override
    public Instant value8() {
        return getDeleted();
    }

    @Override
    public NewMappingRecord value1(String value) {
        setId(value);
        return this;
    }

    @Override
    public NewMappingRecord value2(Integer value) {
        setVersion(value);
        return this;
    }

    @Override
    public NewMappingRecord value3(String value) {
        setName(value);
        return this;
    }

    @Override
    public NewMappingRecord value4(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public NewMappingRecord value5(JSONB value) {
        setMapping(value);
        return this;
    }

    @Override
    public NewMappingRecord value6(Instant value) {
        setCreated(value);
        return this;
    }

    @Override
    public NewMappingRecord value7(String value) {
        setCreator(value);
        return this;
    }

    @Override
    public NewMappingRecord value8(Instant value) {
        setDeleted(value);
        return this;
    }

    @Override
    public NewMappingRecord values(String value1, Integer value2, String value3, String value4, JSONB value5, Instant value6, String value7, Instant value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached NewMappingRecord
     */
    public NewMappingRecord() {
        super(NewMapping.NEW_MAPPING);
    }

    /**
     * Create a detached, initialised NewMappingRecord
     */
    public NewMappingRecord(String id, Integer version, String name, String description, JSONB mapping, Instant created, String creator, Instant deleted) {
        super(NewMapping.NEW_MAPPING);

        setId(id);
        setVersion(version);
        setName(name);
        setDescription(description);
        setMapping(mapping);
        setCreated(created);
        setCreator(creator);
        setDeleted(deleted);
    }
}
