/*
 * This file is generated by jOOQ.
 */
package eu.dissco.backend.database.jooq.tables.records;


import eu.dissco.backend.database.jooq.tables.MachineAnnotationService;

import java.time.Instant;

import org.jooq.JSONB;
import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MachineAnnotationServiceRecord extends UpdatableRecordImpl<MachineAnnotationServiceRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.machine_annotation_service.id</code>.
     */
    public void setId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.machine_annotation_service.id</code>.
     */
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.machine_annotation_service.version</code>.
     */
    public void setVersion(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.machine_annotation_service.version</code>.
     */
    public Integer getVersion() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.machine_annotation_service.name</code>.
     */
    public void setName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.machine_annotation_service.name</code>.
     */
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.machine_annotation_service.date_created</code>.
     */
    public void setDateCreated(Instant value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.machine_annotation_service.date_created</code>.
     */
    public Instant getDateCreated() {
        return (Instant) get(3);
    }

    /**
     * Setter for <code>public.machine_annotation_service.date_modified</code>.
     */
    public void setDateModified(Instant value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.machine_annotation_service.date_modified</code>.
     */
    public Instant getDateModified() {
        return (Instant) get(4);
    }

    /**
     * Setter for
     * <code>public.machine_annotation_service.date_tombstoned</code>.
     */
    public void setDateTombstoned(Instant value) {
        set(5, value);
    }

    /**
     * Getter for
     * <code>public.machine_annotation_service.date_tombstoned</code>.
     */
    public Instant getDateTombstoned() {
        return (Instant) get(5);
    }

    /**
     * Setter for <code>public.machine_annotation_service.creator</code>.
     */
    public void setCreator(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.machine_annotation_service.creator</code>.
     */
    public String getCreator() {
        return (String) get(6);
    }

    /**
     * Setter for
     * <code>public.machine_annotation_service.container_image</code>.
     */
    public void setContainerImage(String value) {
        set(7, value);
    }

    /**
     * Getter for
     * <code>public.machine_annotation_service.container_image</code>.
     */
    public String getContainerImage() {
        return (String) get(7);
    }

    /**
     * Setter for
     * <code>public.machine_annotation_service.container_image_tag</code>.
     */
    public void setContainerImageTag(String value) {
        set(8, value);
    }

    /**
     * Getter for
     * <code>public.machine_annotation_service.container_image_tag</code>.
     */
    public String getContainerImageTag() {
        return (String) get(8);
    }

    /**
     * Setter for
     * <code>public.machine_annotation_service.creative_work_state</code>.
     */
    public void setCreativeWorkState(String value) {
        set(9, value);
    }

    /**
     * Getter for
     * <code>public.machine_annotation_service.creative_work_state</code>.
     */
    public String getCreativeWorkState() {
        return (String) get(9);
    }

    /**
     * Setter for
     * <code>public.machine_annotation_service.source_code_repository</code>.
     */
    public void setSourceCodeRepository(String value) {
        set(10, value);
    }

    /**
     * Getter for
     * <code>public.machine_annotation_service.source_code_repository</code>.
     */
    public String getSourceCodeRepository() {
        return (String) get(10);
    }

    /**
     * Setter for
     * <code>public.machine_annotation_service.service_availability</code>.
     */
    public void setServiceAvailability(String value) {
        set(11, value);
    }

    /**
     * Getter for
     * <code>public.machine_annotation_service.service_availability</code>.
     */
    public String getServiceAvailability() {
        return (String) get(11);
    }

    /**
     * Setter for
     * <code>public.machine_annotation_service.code_maintainer</code>.
     */
    public void setCodeMaintainer(String value) {
        set(12, value);
    }

    /**
     * Getter for
     * <code>public.machine_annotation_service.code_maintainer</code>.
     */
    public String getCodeMaintainer() {
        return (String) get(12);
    }

    /**
     * Setter for <code>public.machine_annotation_service.code_license</code>.
     */
    public void setCodeLicense(String value) {
        set(13, value);
    }

    /**
     * Getter for <code>public.machine_annotation_service.code_license</code>.
     */
    public String getCodeLicense() {
        return (String) get(13);
    }

    /**
     * Setter for
     * <code>public.machine_annotation_service.support_contact</code>.
     */
    public void setSupportContact(String value) {
        set(14, value);
    }

    /**
     * Getter for
     * <code>public.machine_annotation_service.support_contact</code>.
     */
    public String getSupportContact() {
        return (String) get(14);
    }

    /**
     * Setter for
     * <code>public.machine_annotation_service.batching_permitted</code>.
     */
    public void setBatchingPermitted(Boolean value) {
        set(15, value);
    }

    /**
     * Getter for
     * <code>public.machine_annotation_service.batching_permitted</code>.
     */
    public Boolean getBatchingPermitted() {
        return (Boolean) get(15);
    }

    /**
     * Setter for <code>public.machine_annotation_service.time_to_live</code>.
     */
    public void setTimeToLive(Integer value) {
        set(16, value);
    }

    /**
     * Getter for <code>public.machine_annotation_service.time_to_live</code>.
     */
    public Integer getTimeToLive() {
        return (Integer) get(16);
    }

    /**
     * Setter for <code>public.machine_annotation_service.data</code>.
     */
    public void setData(JSONB value) {
        set(17, value);
    }

    /**
     * Getter for <code>public.machine_annotation_service.data</code>.
     */
    public JSONB getData() {
        return (JSONB) get(17);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MachineAnnotationServiceRecord
     */
    public MachineAnnotationServiceRecord() {
        super(MachineAnnotationService.MACHINE_ANNOTATION_SERVICE);
    }

    /**
     * Create a detached, initialised MachineAnnotationServiceRecord
     */
    public MachineAnnotationServiceRecord(String id, Integer version, String name, Instant dateCreated, Instant dateModified, Instant dateTombstoned, String creator, String containerImage, String containerImageTag, String creativeWorkState, String sourceCodeRepository, String serviceAvailability, String codeMaintainer, String codeLicense, String supportContact, Boolean batchingPermitted, Integer timeToLive, JSONB data) {
        super(MachineAnnotationService.MACHINE_ANNOTATION_SERVICE);

        setId(id);
        setVersion(version);
        setName(name);
        setDateCreated(dateCreated);
        setDateModified(dateModified);
        setDateTombstoned(dateTombstoned);
        setCreator(creator);
        setContainerImage(containerImage);
        setContainerImageTag(containerImageTag);
        setCreativeWorkState(creativeWorkState);
        setSourceCodeRepository(sourceCodeRepository);
        setServiceAvailability(serviceAvailability);
        setCodeMaintainer(codeMaintainer);
        setCodeLicense(codeLicense);
        setSupportContact(supportContact);
        setBatchingPermitted(batchingPermitted);
        setTimeToLive(timeToLive);
        setData(data);
        resetChangedOnNotNull();
    }
}
