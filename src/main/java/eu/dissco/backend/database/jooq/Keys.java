/*
 * This file is generated by jOOQ.
 */
package eu.dissco.backend.database.jooq;


import eu.dissco.backend.database.jooq.tables.Annotation;
import eu.dissco.backend.database.jooq.tables.DigitalMediaObject;
import eu.dissco.backend.database.jooq.tables.DigitalSpecimen;
import eu.dissco.backend.database.jooq.tables.MachineAnnotationServices;
import eu.dissco.backend.database.jooq.tables.MasJobRecordNew;
import eu.dissco.backend.database.jooq.tables.User;
import eu.dissco.backend.database.jooq.tables.records.AnnotationRecord;
import eu.dissco.backend.database.jooq.tables.records.DigitalMediaObjectRecord;
import eu.dissco.backend.database.jooq.tables.records.DigitalSpecimenRecord;
import eu.dissco.backend.database.jooq.tables.records.MachineAnnotationServicesRecord;
import eu.dissco.backend.database.jooq.tables.records.MasJobRecordNewRecord;
import eu.dissco.backend.database.jooq.tables.records.UserRecord;

import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AnnotationRecord> ANNOTATION_PK = Internal.createUniqueKey(Annotation.ANNOTATION, DSL.name("annotation_pk"), new TableField[] { Annotation.ANNOTATION.ID }, true);
    public static final UniqueKey<DigitalMediaObjectRecord> DIGITAL_MEDIA_OBJECT_PK = Internal.createUniqueKey(DigitalMediaObject.DIGITAL_MEDIA_OBJECT, DSL.name("digital_media_object_pk"), new TableField[] { DigitalMediaObject.DIGITAL_MEDIA_OBJECT.ID }, true);
    public static final UniqueKey<DigitalSpecimenRecord> DIGITAL_SPECIMEN_PK = Internal.createUniqueKey(DigitalSpecimen.DIGITAL_SPECIMEN, DSL.name("digital_specimen_pk"), new TableField[] { DigitalSpecimen.DIGITAL_SPECIMEN.ID }, true);
    public static final UniqueKey<MachineAnnotationServicesRecord> MACHINE_ANNOTATION_SERVICES_PKEY = Internal.createUniqueKey(MachineAnnotationServices.MACHINE_ANNOTATION_SERVICES, DSL.name("machine_annotation_services_pkey"), new TableField[] { MachineAnnotationServices.MACHINE_ANNOTATION_SERVICES.ID }, true);
    public static final UniqueKey<MasJobRecordNewRecord> MAS_JOB_RECORD_NEW_PK = Internal.createUniqueKey(MasJobRecordNew.MAS_JOB_RECORD_NEW, DSL.name("mas_job_record_new_pk"), new TableField[] { MasJobRecordNew.MAS_JOB_RECORD_NEW.JOB_ID }, true);
    public static final UniqueKey<UserRecord> USER_PKEY = Internal.createUniqueKey(User.USER, DSL.name("user_pkey"), new TableField[] { User.USER.ID }, true);
}
