/*
 * This file is generated by jOOQ.
 */
package eu.dissco.backend.database.jooq.tables.records;


import eu.dissco.backend.database.jooq.tables.Annotation;

import java.time.Instant;
import java.util.UUID;

import org.jooq.JSONB;
import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AnnotationRecord extends UpdatableRecordImpl<AnnotationRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.annotation.id</code>.
     */
    public void setId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.annotation.id</code>.
     */
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.annotation.version</code>.
     */
    public void setVersion(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.annotation.version</code>.
     */
    public Integer getVersion() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.annotation.type</code>.
     */
    public void setType(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.annotation.type</code>.
     */
    public String getType() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.annotation.annotation_hash</code>.
     */
    public void setAnnotationHash(UUID value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.annotation.annotation_hash</code>.
     */
    public UUID getAnnotationHash() {
        return (UUID) get(3);
    }

    /**
     * Setter for <code>public.annotation.motivation</code>.
     */
    public void setMotivation(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.annotation.motivation</code>.
     */
    public String getMotivation() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.annotation.mjr_job_id</code>.
     */
    public void setMjrJobId(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.annotation.mjr_job_id</code>.
     */
    public String getMjrJobId() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.annotation.batch_id</code>.
     */
    public void setBatchId(UUID value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.annotation.batch_id</code>.
     */
    public UUID getBatchId() {
        return (UUID) get(6);
    }

    /**
     * Setter for <code>public.annotation.creator</code>.
     */
    public void setCreator(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.annotation.creator</code>.
     */
    public String getCreator() {
        return (String) get(7);
    }

    /**
     * Setter for <code>public.annotation.created</code>.
     */
    public void setCreated(Instant value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.annotation.created</code>.
     */
    public Instant getCreated() {
        return (Instant) get(8);
    }

    /**
     * Setter for <code>public.annotation.modified</code>.
     */
    public void setModified(Instant value) {
        set(9, value);
    }

    /**
     * Getter for <code>public.annotation.modified</code>.
     */
    public Instant getModified() {
        return (Instant) get(9);
    }

    /**
     * Setter for <code>public.annotation.last_checked</code>.
     */
    public void setLastChecked(Instant value) {
        set(10, value);
    }

    /**
     * Getter for <code>public.annotation.last_checked</code>.
     */
    public Instant getLastChecked() {
        return (Instant) get(10);
    }

    /**
     * Setter for <code>public.annotation.tombstoned</code>.
     */
    public void setTombstoned(Instant value) {
        set(11, value);
    }

    /**
     * Getter for <code>public.annotation.tombstoned</code>.
     */
    public Instant getTombstoned() {
        return (Instant) get(11);
    }

    /**
     * Setter for <code>public.annotation.target_id</code>.
     */
    public void setTargetId(String value) {
        set(12, value);
    }

    /**
     * Getter for <code>public.annotation.target_id</code>.
     */
    public String getTargetId() {
        return (String) get(12);
    }

    /**
     * Setter for <code>public.annotation.data</code>.
     */
    public void setData(JSONB value) {
        set(13, value);
    }

    /**
     * Getter for <code>public.annotation.data</code>.
     */
    public JSONB getData() {
        return (JSONB) get(13);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AnnotationRecord
     */
    public AnnotationRecord() {
        super(Annotation.ANNOTATION);
    }

    /**
     * Create a detached, initialised AnnotationRecord
     */
    public AnnotationRecord(String id, Integer version, String type, UUID annotationHash, String motivation, String mjrJobId, UUID batchId, String creator, Instant created, Instant modified, Instant lastChecked, Instant tombstoned, String targetId, JSONB data) {
        super(Annotation.ANNOTATION);

        setId(id);
        setVersion(version);
        setType(type);
        setAnnotationHash(annotationHash);
        setMotivation(motivation);
        setMjrJobId(mjrJobId);
        setBatchId(batchId);
        setCreator(creator);
        setCreated(created);
        setModified(modified);
        setLastChecked(lastChecked);
        setTombstoned(tombstoned);
        setTargetId(targetId);
        setData(data);
        resetChangedOnNotNull();
    }
}
