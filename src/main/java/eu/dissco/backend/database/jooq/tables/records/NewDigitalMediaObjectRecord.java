/*
 * This file is generated by jOOQ.
 */
package eu.dissco.backend.database.jooq.tables.records;


import eu.dissco.backend.database.jooq.tables.NewDigitalMediaObject;
import java.time.Instant;
import org.jooq.Field;
import org.jooq.JSONB;
import org.jooq.Record12;
import org.jooq.Record2;
import org.jooq.Row12;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class NewDigitalMediaObjectRecord extends UpdatableRecordImpl<NewDigitalMediaObjectRecord> implements Record12<String, Integer, String, String, String, String, String, Instant, Instant, Instant, JSONB, JSONB> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.new_digital_media_object.id</code>.
     */
    public void setId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.new_digital_media_object.id</code>.
     */
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.new_digital_media_object.version</code>.
     */
    public void setVersion(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.new_digital_media_object.version</code>.
     */
    public Integer getVersion() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.new_digital_media_object.type</code>.
     */
    public void setType(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.new_digital_media_object.type</code>.
     */
    public String getType() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.new_digital_media_object.digital_specimen_id</code>.
     */
    public void setDigitalSpecimenId(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.new_digital_media_object.digital_specimen_id</code>.
     */
    public String getDigitalSpecimenId() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.new_digital_media_object.media_url</code>.
     */
    public void setMediaUrl(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.new_digital_media_object.media_url</code>.
     */
    public String getMediaUrl() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.new_digital_media_object.format</code>.
     */
    public void setFormat(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.new_digital_media_object.format</code>.
     */
    public String getFormat() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.new_digital_media_object.source_system_id</code>.
     */
    public void setSourceSystemId(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.new_digital_media_object.source_system_id</code>.
     */
    public String getSourceSystemId() {
        return (String) get(6);
    }

    /**
     * Setter for <code>public.new_digital_media_object.created</code>.
     */
    public void setCreated(Instant value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.new_digital_media_object.created</code>.
     */
    public Instant getCreated() {
        return (Instant) get(7);
    }

    /**
     * Setter for <code>public.new_digital_media_object.last_checked</code>.
     */
    public void setLastChecked(Instant value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.new_digital_media_object.last_checked</code>.
     */
    public Instant getLastChecked() {
        return (Instant) get(8);
    }

    /**
     * Setter for <code>public.new_digital_media_object.deleted</code>.
     */
    public void setDeleted(Instant value) {
        set(9, value);
    }

    /**
     * Getter for <code>public.new_digital_media_object.deleted</code>.
     */
    public Instant getDeleted() {
        return (Instant) get(9);
    }

    /**
     * Setter for <code>public.new_digital_media_object.data</code>.
     */
    public void setData(JSONB value) {
        set(10, value);
    }

    /**
     * Getter for <code>public.new_digital_media_object.data</code>.
     */
    public JSONB getData() {
        return (JSONB) get(10);
    }

    /**
     * Setter for <code>public.new_digital_media_object.original_data</code>.
     */
    public void setOriginalData(JSONB value) {
        set(11, value);
    }

    /**
     * Getter for <code>public.new_digital_media_object.original_data</code>.
     */
    public JSONB getOriginalData() {
        return (JSONB) get(11);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<String, Integer> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record12 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row12<String, Integer, String, String, String, String, String, Instant, Instant, Instant, JSONB, JSONB> fieldsRow() {
        return (Row12) super.fieldsRow();
    }

    @Override
    public Row12<String, Integer, String, String, String, String, String, Instant, Instant, Instant, JSONB, JSONB> valuesRow() {
        return (Row12) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return NewDigitalMediaObject.NEW_DIGITAL_MEDIA_OBJECT.ID;
    }

    @Override
    public Field<Integer> field2() {
        return NewDigitalMediaObject.NEW_DIGITAL_MEDIA_OBJECT.VERSION;
    }

    @Override
    public Field<String> field3() {
        return NewDigitalMediaObject.NEW_DIGITAL_MEDIA_OBJECT.TYPE;
    }

    @Override
    public Field<String> field4() {
        return NewDigitalMediaObject.NEW_DIGITAL_MEDIA_OBJECT.DIGITAL_SPECIMEN_ID;
    }

    @Override
    public Field<String> field5() {
        return NewDigitalMediaObject.NEW_DIGITAL_MEDIA_OBJECT.MEDIA_URL;
    }

    @Override
    public Field<String> field6() {
        return NewDigitalMediaObject.NEW_DIGITAL_MEDIA_OBJECT.FORMAT;
    }

    @Override
    public Field<String> field7() {
        return NewDigitalMediaObject.NEW_DIGITAL_MEDIA_OBJECT.SOURCE_SYSTEM_ID;
    }

    @Override
    public Field<Instant> field8() {
        return NewDigitalMediaObject.NEW_DIGITAL_MEDIA_OBJECT.CREATED;
    }

    @Override
    public Field<Instant> field9() {
        return NewDigitalMediaObject.NEW_DIGITAL_MEDIA_OBJECT.LAST_CHECKED;
    }

    @Override
    public Field<Instant> field10() {
        return NewDigitalMediaObject.NEW_DIGITAL_MEDIA_OBJECT.DELETED;
    }

    @Override
    public Field<JSONB> field11() {
        return NewDigitalMediaObject.NEW_DIGITAL_MEDIA_OBJECT.DATA;
    }

    @Override
    public Field<JSONB> field12() {
        return NewDigitalMediaObject.NEW_DIGITAL_MEDIA_OBJECT.ORIGINAL_DATA;
    }

    @Override
    public String component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getVersion();
    }

    @Override
    public String component3() {
        return getType();
    }

    @Override
    public String component4() {
        return getDigitalSpecimenId();
    }

    @Override
    public String component5() {
        return getMediaUrl();
    }

    @Override
    public String component6() {
        return getFormat();
    }

    @Override
    public String component7() {
        return getSourceSystemId();
    }

    @Override
    public Instant component8() {
        return getCreated();
    }

    @Override
    public Instant component9() {
        return getLastChecked();
    }

    @Override
    public Instant component10() {
        return getDeleted();
    }

    @Override
    public JSONB component11() {
        return getData();
    }

    @Override
    public JSONB component12() {
        return getOriginalData();
    }

    @Override
    public String value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getVersion();
    }

    @Override
    public String value3() {
        return getType();
    }

    @Override
    public String value4() {
        return getDigitalSpecimenId();
    }

    @Override
    public String value5() {
        return getMediaUrl();
    }

    @Override
    public String value6() {
        return getFormat();
    }

    @Override
    public String value7() {
        return getSourceSystemId();
    }

    @Override
    public Instant value8() {
        return getCreated();
    }

    @Override
    public Instant value9() {
        return getLastChecked();
    }

    @Override
    public Instant value10() {
        return getDeleted();
    }

    @Override
    public JSONB value11() {
        return getData();
    }

    @Override
    public JSONB value12() {
        return getOriginalData();
    }

    @Override
    public NewDigitalMediaObjectRecord value1(String value) {
        setId(value);
        return this;
    }

    @Override
    public NewDigitalMediaObjectRecord value2(Integer value) {
        setVersion(value);
        return this;
    }

    @Override
    public NewDigitalMediaObjectRecord value3(String value) {
        setType(value);
        return this;
    }

    @Override
    public NewDigitalMediaObjectRecord value4(String value) {
        setDigitalSpecimenId(value);
        return this;
    }

    @Override
    public NewDigitalMediaObjectRecord value5(String value) {
        setMediaUrl(value);
        return this;
    }

    @Override
    public NewDigitalMediaObjectRecord value6(String value) {
        setFormat(value);
        return this;
    }

    @Override
    public NewDigitalMediaObjectRecord value7(String value) {
        setSourceSystemId(value);
        return this;
    }

    @Override
    public NewDigitalMediaObjectRecord value8(Instant value) {
        setCreated(value);
        return this;
    }

    @Override
    public NewDigitalMediaObjectRecord value9(Instant value) {
        setLastChecked(value);
        return this;
    }

    @Override
    public NewDigitalMediaObjectRecord value10(Instant value) {
        setDeleted(value);
        return this;
    }

    @Override
    public NewDigitalMediaObjectRecord value11(JSONB value) {
        setData(value);
        return this;
    }

    @Override
    public NewDigitalMediaObjectRecord value12(JSONB value) {
        setOriginalData(value);
        return this;
    }

    @Override
    public NewDigitalMediaObjectRecord values(String value1, Integer value2, String value3, String value4, String value5, String value6, String value7, Instant value8, Instant value9, Instant value10, JSONB value11, JSONB value12) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached NewDigitalMediaObjectRecord
     */
    public NewDigitalMediaObjectRecord() {
        super(NewDigitalMediaObject.NEW_DIGITAL_MEDIA_OBJECT);
    }

    /**
     * Create a detached, initialised NewDigitalMediaObjectRecord
     */
    public NewDigitalMediaObjectRecord(String id, Integer version, String type, String digitalSpecimenId, String mediaUrl, String format, String sourceSystemId, Instant created, Instant lastChecked, Instant deleted, JSONB data, JSONB originalData) {
        super(NewDigitalMediaObject.NEW_DIGITAL_MEDIA_OBJECT);

        setId(id);
        setVersion(version);
        setType(type);
        setDigitalSpecimenId(digitalSpecimenId);
        setMediaUrl(mediaUrl);
        setFormat(format);
        setSourceSystemId(sourceSystemId);
        setCreated(created);
        setLastChecked(lastChecked);
        setDeleted(deleted);
        setData(data);
        setOriginalData(originalData);
    }
}
